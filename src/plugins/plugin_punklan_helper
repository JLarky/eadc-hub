#!/usr/bin/env escript
 
main(_) ->
    inets:start(),
    {ok, {_,_, A}}=http:request("http://spb.edu/campus/networks.txt"),
    {ok, B}=regexp:split(A, "\n"),
    %% C - list ok {start_ip, end_ip, campus}
    C=lists:foldl(fun(String, Acc) ->
        case String of
     [$#|_] ->
        Acc;
     [] ->
       Acc;
     _ ->
     {ok,[Ip_range,Campus]} = regexp:split(String, "\tcampus"),
       {ok,[Ip,Range]} = regexp:split(Ip_range, "/"),
       {ok, {N1,N2,N3,N4}}=inet_parse:address(Ip),
       IP=N4+256*(N3+256*(N2+256*N1)),
       RANGE=1 bsl (32-list_to_integer(Range)),
       [{IP, IP+RANGE, list_to_integer(Campus)}|Acc]
    end end, [], B),
   %%io:format("~w\n",[C]),
 
   Out1="-define(GET_CAMPUS_NAME(Ip), if
",
Out2=lists:foldl(fun({Fip, Lip, Camp}, Acc) ->
   FIP=integer_to_list(Fip),
   LIP=integer_to_list(Lip),
   CAMP=integer_to_list(Camp),
   ["(Ip > "++FIP++") and (Ip < "++LIP++") -> "++CAMP++";\n"|Acc]
   end, [], C),
Out3="true -> inet
end).",
io:format("~s~s~s\n",[Out1,Out2,Out3]).
